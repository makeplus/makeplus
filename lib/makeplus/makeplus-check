#!/usr/bin/env bash

main() {
  set -eu -o pipefail

  [[ -z ${MAKEPLUS_TRACE-} ]] || set -x

  path=$1 cmd=$2 args=$3 pass=$4 fail=$5 not=$6 must=$7

  # TODO
  # support ./foo bin/foo cmd
  # sanity check that cmd is runnable

  rc=0
  if [[ $cmd =~ ^\\ ]]; then
    cmd=${cmd#\\}
    eval "makeplus-inline-check() { $cmd; }"

    out=$(PATH="$path" makeplus-inline-check $args) || rc=$?

  else
    out=$(PATH="$path" "$cmd" $args) || rc=$?
  fi

  [[ -z ${MAKEPLUS_DEBUG-} ]] ||
    echo "DEBUG rc=$rc out='$out' cmd='$cmd' args=($args)" \
         "pass=$pass fail=$fail not=$not must=$must" >&2

  [[ -z $not ]] || rc=$((rc - 1))

  if [[ $rc -eq 0 ]]; then
    if [[ -n $out ]]; then
      echo "$out"
      exit 0

    elif [[ -n $pass ]]; then
      echo "$pass"
      exit 0

    elif [[ -n $must ]]; then
      exit 0

    else
      echo "+$not$cmd"
      exit 0
    fi

  else
    if [[ -n $must ]]; then
      exit 2

    elif [[ -n $fail ]]; then
      echo "$fail"
      exit 0

    elif [[ -n $out ]]; then
      echo "$out"
      exit 1
    fi
  fi

  echo "TODO rc=$rc out='$out' cmd=$cmd args=($args)" \
      "pass=$pass fail=$fail not=$not must=$must"

  exit 1
}

# end() {
#   rc=$?
#   ! $running || return 3
#   [[ $rc -le 2 ]] || return 4
#   return $rc
# }

[[ $0 != "${BASH_SOURCE[0]}" ]] || main "$@"
